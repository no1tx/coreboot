# Printing text
echo 'Boot up!'
# Paginate GRUB's output. Very useful for long outputs (help texts!) when working interactively
set pager=1
insmod ahci
insmod part_msdos
insmod part_gpt
insmod tga
insmod png
insmod jpeg
loadfont (cbfsdisk)/font.pf2
# Timeout in seconds before loading the default entry
set timeout=1
# Set the path root (/) to the 5th parition of the first AHCI (SATA) device
set root='cbfsdisk'
set menu_color_normal=white/black
set menu_color_highlight=white/red
background_image /background.tga

menuentry 'Arch Linux (post-factum kernel)' {
        set root='ahci0,gpt1'
	echo -n "Loading Linux... "
        linux   /vmlinuz-linux-pf quiet loglevel=0 rd.systemd.show_status=auto rd.udev.log_priority=0 vt.global_cursor_default=0 add_efi_memmap zfs=tank scsi_mod.use_blk_mq=1 zfs.zfs_arc_max=1073741824 rw i915.fastboot=1 resume=LABEL=swap iomem=relaxed 
	echo "with initramfs"
        initrd  /intel-ucode.img /initramfs-linux-pf.img
}

menuentry 'Arch Linux' {
        set root='ahci0,gpt1'
	echo -n "Loading Linux... "
        linux   /vmlinuz-linux quiet loglevel=0 rd.systemd.show_status=auto rd.udev.log_priority=0 vt.global_cursor_default=0 add_efi_memmap zfs=tank   rw i915.fastboot=1 zfs.zfs_arc_max=1073741824 resume=LABEL=swap iomem=relaxed
	echo "with initramfs"
        initrd  /intel-ucode.img /initramfs-linux.img
}

menuentry 'Arch Linux (LTS kernel)' {
        set root='ahci0,gpt1'
        linux   /vmlinuz-linux-lts quiet loglevel=0 rd.systemd.show_status=auto rd.udev.log_priority=0 vt.global_cursor_default=0 add_efi_memmap zfs=tank rw i915.fastboot=1 zfs.zfs_arc_max=1073741824 resume=LABEL=swap iomem=relaxed
        initrd  /intel-ucode.img /initramfs-linux-lts.img
}

menuentry 'Scan for OS on internal HDD' {
	insmod regexp
	for x in (ahci0,*) ; do
		if [ -f "$x/grub/grub.cfg" ] ; then
			menuentry "Load Config from $x" $x { 
				root=$2
				configfile /grub/grub.cfg
			}
		fi
		if [ -f "$x/boot/grub/grub.cfg" ] ; then
			menuentry "Load Config from $x" $x {
				root=$2
				configfile /boot/grub/grub.cfg
			}
		fi
	done
}

menuentry 'SeaBIOS' {
	set root='cbfsdisk'
	echo    'Loading SeaBIOS...'
	chainloader /fallback/payload
}

menuentry 'Tianocore UEFI' {
        set root='cbfsdisk'
        echo    'Loading Tianocore...'
        chainloader /img/tianocore
}


menuentry 'Configure NVRAM' {
        set root='cbfsdisk'
        echo    'Loading...'
        chainloader /img/nvramcui
}

menuentry 'Coreboot info' {
        set root='cbfsdisk'
        echo    'Loading...'
        chainloader /img/coreinfo   
}

